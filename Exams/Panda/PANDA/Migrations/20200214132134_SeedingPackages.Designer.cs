// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PandaWebApp.Data;

namespace PandaWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200214132134_SeedingPackages")]
    partial class SeedingPackages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PandaWebApp.Models.Package", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = "da9be334-bccc-496d-bfc1-b130dff0c7cf",
                            Description = "abcdefgh",
                            EstimatedDeliveryDate = new DateTime(2020, 3, 15, 13, 21, 34, 183, DateTimeKind.Utc).AddTicks(4766),
                            RecipientId = "0e69d161-4fe0-430d-b2aa-3347a06fce88",
                            ShippingAddress = "Bor N2",
                            Status = 0,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = "f07cf75a-7106-4f4a-b4a8-84c8b38bca94",
                            Description = "12121212",
                            EstimatedDeliveryDate = new DateTime(2020, 3, 15, 13, 21, 34, 184, DateTimeKind.Utc).AddTicks(8839),
                            RecipientId = "0e69d161-4fe0-430d-b2aa-3347a06fce88",
                            ShippingAddress = "Bor N2",
                            Status = 1,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = "5f28c359-875f-4a58-be74-47e628ef24df",
                            Description = "a34a123",
                            EstimatedDeliveryDate = new DateTime(2020, 3, 15, 13, 21, 34, 184, DateTimeKind.Utc).AddTicks(8912),
                            RecipientId = "0e69d161-4fe0-430d-b2aa-3347a06fce88",
                            ShippingAddress = "Bor N2",
                            Status = 2,
                            Weight = 2.0
                        });
                });

            modelBuilder.Entity("PandaWebApp.Models.Receipt", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("IssuedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecepientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("RecepientId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("PandaWebApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PandaWebApp.Models.Package", b =>
                {
                    b.HasOne("PandaWebApp.Models.User", "Recipient")
                        .WithMany("Packages")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PandaWebApp.Models.Receipt", b =>
                {
                    b.HasOne("PandaWebApp.Models.Package", "Package")
                        .WithMany("Receipts")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PandaWebApp.Models.User", "Recepient")
                        .WithMany("Receipts")
                        .HasForeignKey("RecepientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
